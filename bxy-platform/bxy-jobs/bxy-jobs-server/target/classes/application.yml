bxy:
  ip:
    mysql: ${MYSQL_IP:127.0.0.1}
    executor: ${EXECUTOR_IP:127.0.0.1}
  mysql:
    #    authority:
    #      database: bxy_base_0000
    #      host: ${bxy.ip.mysql}
    #      port: ${bxy.mysql.port}
    #    msgs:
    #      database: bxy_base_0000
    #      host: ${bxy.ip.mysql}
    #      port: ${bxy.mysql.port}
    database: bxy_defaults
    biz-database: bxy_base
    host: ${bxy.ip.mysql}
    username: yuqing
    password: yuqing123456yuqing
    port: 3306
    driverClassName: com.mysql.cj.jdbc.Driver
  redis:
    ip: 127.0.0.1
    port: 16379
    password: yuqing123456yuqing
  database:
    isBlockAttack: false
    isMultiTenant: true

### xxl-job email
xxl.job:
  mail:
    host: smtp.163.com
    port: 25
    ssl: false
    username: hellotest@163.com
    password: qazwsx
    sendNick: 《任务调度平台bxy-JOB》
  login:
    username: bxy
    password: bxy
  accessToken:
  i18n:
  # 以下是client 执行器端配置（注意：若不想配置调度器也是执行器，请自行参考xxl）
  admin:
    addresses: http://127.0.0.1:${server.port}/${spring.application.name}
  executor:
    appname: ${spring.application.name}
    ip: ${bxy.ip.executor}
    port: ${bxy.port.executor:8771}
    logpath: ${logging.file.path}/${spring.application.name}/
    logretentiondays: -1


server:
  servlet:
    context-path: /${spring.application.name}
  port: 8767
  undertow: # jetty  undertow
    io-threads: 4 # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
    worker-threads: 80  # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
    buffer-size: 1024  # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理 , 每块buffer的空间大小,越小的空间被利用越充分
    direct-buffers: true  # 是否分配的直接内存

mybatis:
  mapper-locations: classpath:mybatis-mapper/*.xml

spring:
  profiles:
    active: dev
  datasource:
    druid:
      url: jdbc:mysql://${bxy.mysql.host}:${bxy.mysql.port}/${bxy.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
      username: ${bxy.mysql.username}
      password: ${bxy.mysql.password}
      driver-class-name: ${bxy.mysql.driverClassName}
      initialSize: 10
      minIdle: 10
      maxActive: 500
      max-wait: 60000
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      validation-query: SELECT 'x'
      test-on-borrow: false
      test-on-return: false
      test-while-idle: true
      time-between-eviction-runs-millis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      min-evictable-idle-time-millis: 300000    #配置一个连接在池中最小生存的时间，单位是毫秒
  mvc:
    static-path-pattern: /static/**
  resources:
    static-locations: classpath:/static/
  freemarker:
    templateLoaderPath: classpath:/templates/
    suffix: .ftl
    charset: UTF-8
    request-context-attribute: request
    settings:
      number_format: 0.##       #解決freemarker数字输出中的逗号问题
      #      classic_compatible: true  #默认情况变量为null则替换为空字符串，如果需要自定义，写上${empty!"EmptyValue of fbysss"}的形式即可
      whitespace_stripping: true      # 剥离前后空字符串
      boolean_format: true,false      # 布尔类型格式化
      datetime_format: yyyy-MM-dd HH:mm:ss  # dateTime 类型格式化， 使用日期类型时， 需要在参数后追加 ?datetime eg: ${date?datetime}
      date_format: yyyy-MM-dd   # date 类型格式化， 使用日期类型时， 需要在参数后追加 ?date eg: ${date?date}
      time_format: HH:mm:ss      # time 类型格式化， 使用日期类型时， 需要在参数后追加 ?time eg: ${date?time}
      template_exception_handler: ignore   # 忽略模版异常
      default_encoding: UTF-8      # 默认编码
      url_escaping_charset: UTF-8  # url 转义编码
  http:
    encoding:
      charset: UTF-8
      force: true
      enabled: true


mybatis-plus:
  # 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.xml
  # 如果是放在resource目录 classpath:/mapper/*Mapper.xml
  mapper-locations:
    - classpath:mybatis-mapper/**/*Mapper.xml
    - classpath:mapper_authority/**/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.xxl.job.admin.core.model,com.github.bxy.authority.entity
  global-config:
    db-config:
      #    super-mapper-class: com.bxysoft.db.MyBaseMapper
      #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
      id-type: INPUT
      #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
      field-strategy: NOT_EMPTY
      #驼峰下划线转换
      #      db-column-underline: true
      #mp2.3+ 全局表前缀 mp_
      #table-prefix: mp_
      #刷新mapper 调试神器
      #      refresh-mapper: true
      #数据库大写下划线转换
      #capital-mode: true
      #逻辑删除配置（下面3个配置）
      logic-delete-value: 4
      logic-not-delete-value: 0
  configuration:
    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
    map-underscore-to-camel-case: true
    cache-enabled: false
    #配置JdbcTypeForNull, oracle数据库必须配置
    jdbc-type-for-null: 'null'




j2cache:
  #  config-location: /j2cache.properties
  open-spring-cache: true
  cache-clean-mode: passive
  allow-null-values: true
  redis-client: lettuce
  #  l2-cache-open: true
  l2-cache-open: false     # 关闭二级缓存
  #broadcast: net.oschina.j2cache.cache.support.redis.SpringRedisPubSubPolicy
  broadcast: jgroups       # 关闭二级缓存
  L1:
    provider_class: caffeine
  L2:
    provider_class: net.oschina.j2cache.cache.support.redis.SpringRedisProvider
    config_section: lettuce
  sync_ttl_to_redis: true
  default_cache_null_object: false
  serialization: fst
caffeine:
  properties: /j2cache/caffeine.properties   # 这个配置文件需要放在项目中
lettuce:
  mode: single
  namespace:
  storage: generic
  channel: j2cache
  scheme: redis
  hosts: ${bxy.redis.ip}:${bxy.redis.port}
  password: ${bxy.redis.password}
  database: 0
  sentinelMasterId:
  maxTotal: 100
  maxIdle: 10
  minIdle: 10
  timeout: 10000
